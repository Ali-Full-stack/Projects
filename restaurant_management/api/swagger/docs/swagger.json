{
    "swagger": "2.0",
    "info": {
        "description": "This swagger UI was created to manage Restaurant operation",
        "title": "Project: RESTAURANT MANAGEMENT",
        "contact": {
            "email": "ali.team@gmail.com"
        },
        "version": "1.0"
    },
    "host": "localhost:8888",
    "paths": {
        "/admin/delete/:id": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This method is responsible for Deleting    Employee Information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "REGISTRATION"
                ],
                "summary": "Deletes  Employee Information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Role",
                        "name": "id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Password",
                        "name": "password",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Employee ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Response",
                        "schema": {
                            "$ref": "#/definitions/model.EmployeeResponse"
                        }
                    },
                    "403": {
                        "description": "Unauthorized access",
                        "schema": {}
                    },
                    "500": {
                        "description": "Unable to Delete  Employee  ! Try again later !",
                        "schema": {}
                    }
                }
            }
        },
        "/admin/register": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This method is responsible for Registering   New Employees",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "REGISTRATION"
                ],
                "summary": "Registers New Employee",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Role",
                        "name": "id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Password",
                        "name": "password",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Employee Details",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.EmployeeInfo"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "New employee registered",
                        "schema": {
                            "$ref": "#/definitions/model.EmployeeInfo"
                        }
                    },
                    "400": {
                        "description": "Incorrect Employee Information !",
                        "schema": {}
                    },
                    "403": {
                        "description": "Unauthorized access",
                        "schema": {}
                    },
                    "500": {
                        "description": "Failed Registering New Employee !",
                        "schema": {}
                    }
                }
            }
        },
        "/admin/update/:id": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This method is responsible for Updating    Employee Information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "REGISTRATION"
                ],
                "summary": "Updates  Employee Information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Role",
                        "name": "id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Password",
                        "name": "password",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Employee ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Employee Details",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.EmployeeInfo"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Response",
                        "schema": {
                            "$ref": "#/definitions/model.EmployeeResponse"
                        }
                    },
                    "400": {
                        "description": "Incorrect Employee Information !",
                        "schema": {}
                    },
                    "403": {
                        "description": "Unauthorized access",
                        "schema": {}
                    },
                    "500": {
                        "description": "Unable to Update employee info ! Try again later !",
                        "schema": {}
                    }
                }
            }
        },
        "/order/create": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This method is responsible for creating guest  orders and sends to kitchen",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ORDER"
                ],
                "summary": "Creates Guest Orders",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Employee ID",
                        "name": "id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Password",
                        "name": "password",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Order Details",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.GuestOrder"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Order accepted . ",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Incorrect Order Details !\",",
                        "schema": {}
                    },
                    "403": {
                        "description": "Unauthorized access",
                        "schema": {}
                    },
                    "500": {
                        "description": "Unable to Send  an Order To kitchen !",
                        "schema": {}
                    }
                }
            }
        },
        "/order/fire": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This method is responsible for getting  guest  orders  status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ORDER"
                ],
                "summary": "Gets  Order Status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Employee ID",
                        "name": "id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Password",
                        "name": "password",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Course Details",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.GetStatus"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status Details",
                        "schema": {
                            "$ref": "#/definitions/model.StatusResponse"
                        }
                    },
                    "400": {
                        "description": "Incorrect  Course information !\",",
                        "schema": {}
                    },
                    "403": {
                        "description": "Unauthorized access",
                        "schema": {}
                    },
                    "500": {
                        "description": "Unable to get status information !",
                        "schema": {}
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This method is responsible for firing guest  orders  courses",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ORDER"
                ],
                "summary": "Fires  Order course",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Employee ID",
                        "name": "id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Password",
                        "name": "password",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Fire Details",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.FireCourse"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Fire Course accepted . ",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Incorrect  FireCourse information !",
                        "schema": {}
                    },
                    "403": {
                        "description": "Unauthorized access",
                        "schema": {}
                    },
                    "500": {
                        "description": "Unable to Send  fire course to kitchen !",
                        "schema": {}
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Dessert": {
            "type": "object",
            "properties": {
                "coffee": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                },
                "dessert": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "model.Drink": {
            "type": "object",
            "properties": {
                "drink": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "model.EmployeeInfo": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "model.EmployeeResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "model.FireCourse": {
            "type": "object",
            "properties": {
                "course": {
                    "type": "string"
                },
                "tableNumber": {
                    "type": "integer"
                },
                "time": {
                    "type": "string"
                },
                "waiter": {
                    "type": "string"
                }
            }
        },
        "model.GetStatus": {
            "type": "object",
            "properties": {
                "course": {
                    "type": "string"
                },
                "tableNumber": {
                    "type": "integer"
                }
            }
        },
        "model.GuestOrder": {
            "type": "object",
            "properties": {
                "dessert": {
                    "$ref": "#/definitions/model.Dessert"
                },
                "drink": {
                    "$ref": "#/definitions/model.Drink"
                },
                "main": {
                    "$ref": "#/definitions/model.Main"
                },
                "pizza": {
                    "$ref": "#/definitions/model.Pizza"
                },
                "starter": {
                    "$ref": "#/definitions/model.Starter"
                },
                "tableNumber": {
                    "type": "integer"
                },
                "time": {
                    "type": "string"
                },
                "totalGuest": {
                    "type": "integer"
                },
                "waiter": {
                    "type": "string"
                }
            }
        },
        "model.Main": {
            "type": "object",
            "properties": {
                "meal": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "model.Pizza": {
            "type": "object",
            "properties": {
                "pizza": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "model.Starter": {
            "type": "object",
            "properties": {
                "salads": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "model.StatusResponse": {
            "type": "object",
            "properties": {
                "course": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "tableNumber": {
                    "type": "integer"
                }
            }
        }
    }
}
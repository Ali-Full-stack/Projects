{
    "swagger": "2.0",
    "info": {
        "description": "This swagger UI was created to manage LIBRARY",
        "title": "Project: LIBRARY",
        "contact": {},
        "version": "1.0"
    },
    "paths": {
        "/books": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This method Gets  Multiple Books From Database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BOOK"
                ],
                "summary": "Gets Multiple Books",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Role",
                        "name": "role",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.BookInfo"
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized access",
                        "schema": {}
                    },
                    "500": {
                        "description": "Request Denied : Unable to Get Books !",
                        "schema": {}
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This method addes Multiple Books to Database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BOOK"
                ],
                "summary": "Create Multiple Books",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Role",
                        "name": "role",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Password",
                        "name": "password",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Books",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.BookInfo"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "All Books Added Succesfully .",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "400": {
                        "description": "Invalid Request: incorrect book information !!",
                        "schema": {}
                    },
                    "403": {
                        "description": "Unauthorized access",
                        "schema": {}
                    }
                }
            }
        },
        "/books/author/{author}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This method Gets  Multiple Books By AuthorsFrom Database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BOOK"
                ],
                "summary": "Gets Multiple Books",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Role",
                        "name": "role",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Book's  author name",
                        "name": "author",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.BookInfo"
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized access",
                        "schema": {}
                    },
                    "500": {
                        "description": "Request Denied : Unable to Get Books !",
                        "schema": {}
                    }
                }
            }
        },
        "/books/category/{category}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This method Gets  Multiple Books By category From Database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BOOK"
                ],
                "summary": "Gets Multiple Books",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Role",
                        "name": "role",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Book's category",
                        "name": "category",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.BookInfo"
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized access",
                        "schema": {}
                    },
                    "500": {
                        "description": "Request Denied : Unable to Get Books !",
                        "schema": {}
                    }
                }
            }
        },
        "/books/count": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This method Counts  author 's  Book By ISBN  From Database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BOOK"
                ],
                "summary": "Counts Autors   Book",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Role",
                        "name": "role",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Book deleted succesfully .",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "403": {
                        "description": "Unauthorized access",
                        "schema": {}
                    },
                    "500": {
                        "description": "Request Denied : Unable to Delete  Book !",
                        "schema": {}
                    }
                }
            }
        },
        "/books/status": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This method updates   Book's status  in Database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BOOK"
                ],
                "summary": "Updates   Book's status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Role",
                        "name": "role",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Password",
                        "name": "password",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Book's Status",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.BookStatus"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Book' s status updated succesfully .",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "400": {
                        "description": "Invalid Request: incorrect book information !!",
                        "schema": {}
                    },
                    "403": {
                        "description": "Unauthorized access",
                        "schema": {}
                    }
                }
            }
        },
        "/books/{isbn}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This method Deletes   Book By ISBN  From Database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BOOK"
                ],
                "summary": "Deletes   Book",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Role",
                        "name": "role",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Password",
                        "name": "password",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Book ISBN",
                        "name": "isbn",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Book deleted succesfully .",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "403": {
                        "description": "Unauthorized access",
                        "schema": {}
                    },
                    "500": {
                        "description": "Request Denied : Unable to Delete  Book !",
                        "schema": {}
                    }
                }
            }
        },
        "/login": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This method Verifies  Client's login And Returns Token  back",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AUTH"
                ],
                "summary": "LOGIN",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Role",
                        "name": "role",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Client Login",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.ClientLogin"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.ClientToken"
                        }
                    },
                    "400": {
                        "description": "Invalid Request",
                        "schema": {}
                    },
                    "403": {
                        "description": "Unauthorized access",
                        "schema": {}
                    },
                    "404": {
                        "description": "Client ID not found:   Sign Up  .",
                        "schema": {}
                    },
                    "500": {
                        "description": "Request denied !",
                        "schema": {}
                    }
                }
            }
        },
        "/register": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This method registers New Clients",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AUTH"
                ],
                "summary": "Register New Client",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Role",
                        "name": "role",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "client Information",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.ClientInfo"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Confirm the code we have sent to your Email !",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "400": {
                        "description": "Invalid Request",
                        "schema": {}
                    },
                    "403": {
                        "description": "Unauthorized access",
                        "schema": {}
                    },
                    "500": {
                        "description": "Request denied !",
                        "schema": {}
                    }
                }
            }
        },
        "/rent": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This method assign  Rented Books to Client",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RENT"
                ],
                "summary": "Addes Rented Books",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Role",
                        "name": "role",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Client ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Rented Book",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.RentBook"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Rented book added to client succesfully .",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "400": {
                        "description": "Invalid Request: incorrect book information !!",
                        "schema": {}
                    },
                    "403": {
                        "description": "Unauthorized access",
                        "schema": {}
                    },
                    "500": {
                        "description": "Request Denied : Unable to Add RentedBook to Client !",
                        "schema": {}
                    }
                }
            }
        },
        "/verification": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This method Verifies  Client's Code And sends ID back",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AUTH"
                ],
                "summary": "Confirm Client's Code",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Role",
                        "name": "role",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Client Code",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.ClientCode"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.ClientID"
                        }
                    },
                    "400": {
                        "description": "Invalid Request",
                        "schema": {}
                    },
                    "403": {
                        "description": "Unauthorized access",
                        "schema": {}
                    },
                    "500": {
                        "description": "Request denied !",
                        "schema": {}
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Address": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "home_number": {
                    "type": "string"
                }
            }
        },
        "model.Author": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "integer"
                },
                "contact": {
                    "$ref": "#/definitions/model.Contact"
                },
                "fullname": {
                    "type": "string"
                }
            }
        },
        "model.BookInfo": {
            "type": "object",
            "properties": {
                "author": {
                    "$ref": "#/definitions/model.Author"
                },
                "category": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "isbn": {
                    "type": "string"
                },
                "rentdetails": {
                    "$ref": "#/definitions/model.RentDetails"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "model.BookStatus": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "model.ClientCode": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                }
            }
        },
        "model.ClientID": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "model.ClientInfo": {
            "type": "object",
            "properties": {
                "address": {
                    "$ref": "#/definitions/model.Address"
                },
                "email": {
                    "type": "string"
                },
                "fullname": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "rentedbooks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.RentBook"
                    }
                }
            }
        },
        "model.ClientLogin": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "model.ClientToken": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "model.Contact": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "facebook": {
                    "type": "string"
                }
            }
        },
        "model.RentBook": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                },
                "duration": {
                    "type": "integer"
                },
                "given_date": {
                    "type": "string"
                },
                "price_day": {
                    "type": "string"
                },
                "return_date": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "model.RentDetails": {
            "type": "object",
            "properties": {
                "price_day": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "model.Response": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        }
    }
}
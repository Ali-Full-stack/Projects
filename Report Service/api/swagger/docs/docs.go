// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/employees/login": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This method is responsible for managing   employees login",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EMPLOYEE"
                ],
                "summary": "Employee \t\tLogin",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Password",
                        "name": "password",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.EmployeeToken"
                        }
                    },
                    "400": {
                        "description": "Login Failed : Invalid ID or Password !",
                        "schema": {}
                    },
                    "500": {
                        "description": "Unable to procces login!",
                        "schema": {}
                    }
                }
            }
        },
        "/employees/register": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This method is responsible for registering new  employees",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EMPLOYEE"
                ],
                "summary": "Registers   New Employees",
                "parameters": [
                    {
                        "description": "Employee Details",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.EmployeeDetail"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.EmployeeID"
                        }
                    },
                    "400": {
                        "description": "Invalid employee details !",
                        "schema": {}
                    },
                    "500": {
                        "description": "Unable to register  new employee!",
                        "schema": {}
                    }
                }
            }
        },
        "/reports": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This method is responsible for getting all  reports",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "REPORT"
                ],
                "summary": "Gets All  Reports",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Reporter Token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.ReportDetails"
                            }
                        }
                    },
                    "403": {
                        "description": "Permission Denied !",
                        "schema": {}
                    },
                    "404": {
                        "description": "There is No Reports Exists !",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Unable to get all  reports details !",
                        "schema": {}
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This method is responsible for creating  reports",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "REPORT"
                ],
                "summary": "Creates  Reports",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Reporter Token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Report Details",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.ReportDetails"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Request Accepted ..",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid report details !",
                        "schema": {}
                    },
                    "403": {
                        "description": "Permission Denied !",
                        "schema": {}
                    },
                    "500": {
                        "description": "Unable to publish report details !",
                        "schema": {}
                    }
                }
            }
        },
        "/reports/:id": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This method is responsible for updates  reports",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "REPORT"
                ],
                "summary": "Updates  Reports",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Reporter Token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Report ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Report Details",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.ReportDetails"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Request Accepted ..",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid report details !",
                        "schema": {}
                    },
                    "403": {
                        "description": "Permission Denied !",
                        "schema": {}
                    },
                    "500": {
                        "description": "Unable to publish report details !",
                        "schema": {}
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This method is responsible for deleting  reports",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "REPORT"
                ],
                "summary": "Deletes  Reports",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Reporter Token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Report ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Request Accepted ..",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Permission Denied !",
                        "schema": {}
                    },
                    "500": {
                        "description": "Unable to publish report details !",
                        "schema": {}
                    }
                }
            }
        },
        "/reports/search": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This method is responsible for getting Multiple  reports by filter",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "REPORT"
                ],
                "summary": "Gets  multiple  Reports",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Reporter Token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Filter details",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.ReportFilter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.ReportDetails"
                            }
                        }
                    },
                    "403": {
                        "description": "Permission Denied !",
                        "schema": {}
                    },
                    "404": {
                        "description": "There is No Reports Exists !",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Unable to get  reports details  by filter!",
                        "schema": {}
                    }
                }
            }
        },
        "/reports/status/:id": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This method is responsible for getting Multiple  report's statuses by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "REPORT"
                ],
                "summary": "Gets  multiple  Report's  statuses",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Reporter Token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Report  ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.ReportStatus"
                            }
                        }
                    },
                    "403": {
                        "description": "Permission Denied !",
                        "schema": {}
                    },
                    "404": {
                        "description": "There is No Reports status Exists !",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Unable to get  reports statuses !",
                        "schema": {}
                    }
                }
            }
        }
    },
    "definitions": {
        "model.EmployeeDetail": {
            "type": "object",
            "properties": {
                "fullname": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "tvChannel": {
                    "type": "string"
                }
            }
        },
        "model.EmployeeID": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "model.EmployeeToken": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "model.ReportDetails": {
            "type": "object",
            "properties": {
                "about": {
                    "type": "string"
                },
                "channel": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "reporter": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "model.ReportFilter": {
            "type": "object",
            "properties": {
                "filterName": {
                    "type": "string"
                },
                "filterValue": {
                    "type": "string"
                }
            }
        },
        "model.ReportStatus": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Project: Report Service",
	Description:      "This swagger UI was created to manage Reports",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	// LeftDelim:        "{{",
	// RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
